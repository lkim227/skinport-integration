version: '3.8'
services:
  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASS=password
      - DB_NAME=datalouna
      - REDIS_HOST=redis
    depends_on:
      - db
      - redis
      - migrate
    volumes:
      - .:/app  # Mount project source code
      - /app/node_modules  # Persist node_modules within container
      - /app/dist
    command: npm run start
    deploy:
      resources:
        limits:
          cpus: "0.5"  # Limit to 0.5 CPU
          memory: "512M"  # Limit to 512MB of RAM
    restart: always

  migrate:
    build: .
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASS=password
      - DB_NAME=datalouna
    volumes:
      - .:/app
      - /app/node_modules
      - /app/dist
    command: npx knex migrate:latest
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "256M"
    restart: on-failure

  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: datalouna
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"
    restart: always

  redis:
    image: redis:6.2-alpine
    ports:
      - "6379:6379"
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "256M"
    restart: always

volumes:
  db_data:
